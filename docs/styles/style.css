/* Color.com es una buena opcion para tomar de una imagen los colores*/
body{
    background: ivory;   
    background-image: url("/images/patrones");
    
}

#wrapper {
    background: #dddfcf ;
    max-width: 1000px;
    /* con width puedo determinar el ancho que tendra en todas las computadoras y el margin pues no importa que tan grande sea la compu eso se dividira a cada lado */
    margin: auto;
    border: 3px solid black;
    border-radius: 10px;
    display: grid;
    
    
}
header{
    /*Esta manera de agregar imagenes hace que no se agreguen como contenido (no se puedan copiar) solo mirar*/
    background-image:url("../images/olas.png");
    background-position: 0 900px;
    /*Para rellenar el espacio puedo usar padding con la imagen*/
    padding: 40px;
    
}

header img {
    width: 100px;
}

header h1 {
    /*Para usar display tenemos block and inline. Siempre en CSS se muestra uno debajo de otro y una linea en medio, inline hará que esté a un lado*/
    display: inline;
    font-size: 3em;
    float: right;
}

nav {
    /*Cuando ya he determinado un ancho por un cuadro para todo el texto, si uso 100% de ancho solo era dentro del ancho ya determinado. En este caso en #wrapper */
    width: 100%;
    background-color: #1f3a3d;
    border: 4px, solid, black;
    /*Si solamente escribo el borde y tengo 100% del ancho este se va a salir, por lo que debo usar box sizing*/
    box-sizing: border-box;
    /*si quiero usar "flex" debo usar la justificación de los elementos*/
    /*
    display: flex;
    justify-content:space-evenly;
    */
    justify-items: center;
    /*para grid centrar los textos se usa justify items: center*/ 
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    height: 60px;
    padding: 20px 30px;
    
}

nav a:hover{
    background: #1da4ae;
    text-shadow: 4px 4px 2px #1f3a3d;
}

nav a{
    
    /*Para ubicar los objetos en la mitad verticalmente, uso align items*/
    align-items: center;
    text-decoration: none;
    color: white;
    /*La medida EM es para asignar un porcentaje más grande del determinado. Como el 200% 2em*/
    font-size: 1.5em;
}

main{
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
}

footer{
  
  display: grid;
  grid-template-columns: 1fr 1fr;
  background-image:url("../images/olas.png");
  background-position: 0 400px;
  
}

footer form{
    background: #1f5458;
    width: 400px;
    margin-top: 20px;
    padding: 10px;
    border: 3px dotted black;
    border-radius: 10px;
    height: 15px;
    overflow: hidden;
    transition: height 1,75s ease-out;
    /*Para "absolute" el objeto tomara una posición desde el punto cero de la ventana. Y ahi puedo usar atributos como bottoms u otros, para ubicarlo donde yo deseo. Pero no tomará en cuenta el scroll bar*/

    /*Si deseo usar "Fixed" asigno valores igual que absolute pero si funcionará con el scroll bar*/
    /*Y flex es más para ubicarlos de izquierda a derecha*/
    /*position: fixed;
    bottom: 10px;
    right: 0;*/
    grid-column: 2/3;
    display: grid;
    grid-template-columns: .25fr 1fr;
  }

  footer form:hover{
    height: 200px;
    transition: 2,85s ease-in;
    
  }

footer p{
  grid-column: 1/3;
  justify-self: center;
}

footer ul li a{
  text-decoration: none;
  color:white;
  font-size: 1.25em;
}

section{
    border: 3px solid black;
    background-color: #1d5055;
    /*tambien puedo acomodar en columnas por medio de float*/
    width: 95%;
    /*Como ya vamos a usar grid ya no necesitamos usar float
    float:left;
    */
    padding: 10px 30px;
    box-sizing: border-box;
    margin: 6px 5px;
    color: aliceblue;
}

section img{
  width: 100%
}

table{
    /*ubicar table donde no moleste los otros atributos de otras secciones con el atributo clear: both*/
    /*divtable.com/table-style/ ayuda a darle formatos a nuestras tables*/
    grid-column: 1/4;
    grid-row: 1/2;

}
table.blueTable {
    border: 1px solid #1C6EA4;
    background-color: #EEEEEE;
    width: 100%;
    text-align: center;
    border-collapse: collapse;
  }
  table.blueTable td, table.blueTable th {
    border: 1px solid #AAAAAA;
    padding: 3px 2px;
  }
  table.blueTable tr:nth-child(even) {
    background: #959B7C;
  }
  table.blueTable thead {
    background: #1DA4AE;
    background: -moz-linear-gradient(top, #55bbc2 0%, #33adb6 66%, #1DA4AE 100%);
    background: -webkit-linear-gradient(top, #55bbc2 0%, #33adb6 66%, #1DA4AE 100%);
    background: linear-gradient(to bottom, #55bbc2 0%, #33adb6 66%, #1DA4AE 100%);
    border-bottom: 2px solid #444444;
  }
  table.blueTable thead th {
    font-size: 15px;
    font-weight: bold;
    color: #FFFFFF;
    border-left: 2px solid #D0E4F5;
  }
  table.blueTable thead th:first-child {
    border-left: none;
  }
  
  table.blueTable tfoot td {
    font-size: 14px;
  }
  table.blueTable tfoot .links {
    text-align: right;
  }
  table.blueTable tfoot .links a{
    display: inline-block;
    background: #1C6EA4;
    color: #FFFFFF;
    padding: 2px 8px;
    border-radius: 5px;
  }

@media(max-width: 745px){
    main{
      display: block;
    }
    table{
      width: 100%;
    }
    header{
      padding: 0;
    }
    header h1{
      font-size: 2em;
    }
    nav{
      display: block;
      height: unset;
    }
    nav a{
      display: flex;
    }

}